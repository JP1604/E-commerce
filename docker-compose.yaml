version: "3.9"

services:
  product_db:
    image: postgres:16
    container_name: product_service_db
    restart: always
    environment:
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - ecommerce_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5

  product_service:
    build:
      context: ./Backend
      dockerfile: src/product_service/Dockerfile
    container_name: product_service
    restart: always
    depends_on:
      product_db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://ecommerce_user:ecommerce_pass@product_db:5432/ecommerce
      - DATABASE_ECHO=false
    volumes:
      - ./Backend:/app

  user_db:
    image: postgres:16
    container_name: user_service_db
    restart: always
    environment:
      POSTGRES_USER: user_svc
      POSTGRES_PASSWORD: user_pass
      POSTGRES_DB: userdb
    ports:
      - "5433:5432"
    volumes:
      - user_service_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_svc -d userdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  user_service:
    build:
      context: ./Backend
      dockerfile: src/user_service/Dockerfile
    container_name: user_service
    restart: always
    depends_on:
      user_db:
        condition: service_healthy
    ports:
      - "8001:8001"
    environment:
      - USER_DATABASE_URL=postgresql+asyncpg://user_svc:user_pass@user_db:5432/userdb
      - USER_DATABASE_ECHO=false
    volumes:
      - ./Backend:/app

  delivery_db:
    image: postgres:16-alpine
    container_name: delivery_service_db
    restart: always
    environment:
      POSTGRES_USER: delivery_svc
      POSTGRES_PASSWORD: delivery_pass
      POSTGRES_DB: deliverydb
    ports:
      - "5434:5432"
    volumes:
      - delivery_service_data:/var/lib/postgresql/data

  delivery_service:
    build:
      context: ./Backend
      dockerfile: src/delivery_service/Dockerfile
    container_name: delivery_service
    restart: always
    depends_on:
      - delivery_db
    ports:
      - "8002:8002"
    environment:
      - DELIVERY_DATABASE_URL=postgresql+asyncpg://delivery_svc:delivery_pass@delivery_db:5432/deliverydb
      - DELIVERY_DATABASE_ECHO=false
    volumes:
      - ./Backend:/app


  cart_db:
    image: postgres:15
    container_name: cart_service_db
    restart: always
    environment:
      POSTGRES_USER: cart_svc
      POSTGRES_PASSWORD: cart_pass
      POSTGRES_DB: cartdb
    ports:
      - "5436:5432"
    volumes:
      - cart_service_data:/var/lib/postgresql/data

  cart_service:
    build:
      context: ./Backend
      dockerfile: src/cart_service/Dockerfile
    container_name: cart_service
    restart: always
    depends_on:
      - cart_db
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql+asyncpg://cart_svc:cart_pass@cart_db:5432/cartdb
      - DATABASE_ECHO=false
      - PRODUCT_SERVICE_URL=http://product_service:8000
    volumes:
      - ./Backend:/app

  order_db:
    image: postgres:15
    container_name: order_service_db
    restart: always
    environment:
      POSTGRES_USER: order_svc
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: orderdb
    ports:
      - "5437:5432"
    volumes:
      - order_service_data:/var/lib/postgresql/data

  order_service:
    build:
      context: ./Backend
      dockerfile: src/order_service/Dockerfile
    container_name: order_service
    restart: always
    depends_on:
      - order_db
    ports:
      - "8005:8005"
    environment:
      - ORDER_DATABASE_URL=postgresql+asyncpg://order_svc:order_pass@order_db:5432/orderdb
      - ORDER_DATABASE_ECHO=false
    volumes:
      - ./Backend:/app

  order_validation_service:
    build:
      context: ./Backend
      dockerfile: src/order_validation_service/Dockerfile
    container_name: order_validation_service
    restart: always
    ports:
      - "8006:8006"
    environment:
      - USER_SERVICE_URL=http://user_service:8001
      - PRODUCT_SERVICE_URL=http://product_service:8000
      - ORDER_SERVICE_URL=http://order_service:8005
    volumes:
      - ./Backend:/app

  payment_db:
    image: postgres:15
    container_name: payment_service_db
    restart: always
    environment:
      POSTGRES_USER: payment_svc
      POSTGRES_PASSWORD: payment_pass
      POSTGRES_DB: paymentdb
    ports:
      - "5435:5432"
    volumes:
      - payment_service_data:/var/lib/postgresql/data

  payment_service:
    build:
      context: ./Backend
      dockerfile: src/payment_service/Dockerfile
    container_name: payment_service
    restart: always
    depends_on:
      - payment_db
    ports:
      - "8007:8007"
    environment:
      - PAYMENT_DATABASE_URL=postgresql+asyncpg://payment_svc:payment_pass@payment_db:5432/paymentdb
      - PAYMENT_DATABASE_ECHO=false
      - ORDER_SERVICE_URL=http://order_service:8005
      - USER_SERVICE_URL=http://user_service:8001

    volumes:
      - ./Backend:/app

  api_gateway:
    build:
      context: ./Backend
      dockerfile: src/api_gateway/Dockerfile
    container_name: api_gateway
    restart: always
    depends_on:
      - product_service
      - user_service
      - delivery_service
      - cart_service
      - order_service
      - order_validation_service
      - payment_service
    environment:
      - PRODUCT_SERVICE_URL=http://product_service:8000
      - USER_SERVICE_URL=http://user_service:8001
      - DELIVERY_SERVICE_URL=http://delivery_service:8002
      - CART_SERVICE_URL=http://cart_service:8003
      - ORDER_SERVICE_URL=http://order_service:8005
      - ORDER_VALIDATION_SERVICE_URL=http://order_validation_service:8006
      - PAYMENT_SERVICE_URL=http://payment_service:8007
    ports:
      - "8080:8080"
    volumes:
      - ./Backend:/app

volumes:
  ecommerce_data:
  user_service_data:

  delivery_service_data:


  cart_service_data:

  order_service_data:
  payment_service_data:


